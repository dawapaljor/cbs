---
import astroLogo from '../assets/astro.svg';
import background from '../assets/background.svg';
import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import QuotePrimary from './widgets/QuotePrimary.astro';
import { makeIssue } from 'astro:schema';

const getDocs = await Astro.glob(`../content/docs/*.mdx`)
const docs = getDocs.map(n => ({
  title: n.frontmatter.title,
  slug: n.frontmatter.slug,
  intro: n.frontmatter.intro,
  featuredImage: n.frontmatter.featuredImage,
  Content: n.Content,
}));


---
<!-- {
	docs.map(({ title,slug, Content }) => (
		<h2 class="" id={slug}>{title}</h2>
		<Content class="pt-10" />
	))
 }   -->

<div class="max-w-screen mx-auto  ">
 
 {
	docs.map(({ title,slug, featuredImage, intro, Content }) => (
	// <div class="flex box   " style=`background:url(${featuredImage}); background-repeat: no-repeat; background-size: cover; background-attachment:fixed`>
    <div class="banner w-screen h-screen  bg-[url()] bg-cover bg-fixed relative"  style=`background-image:url(${featuredImage})`>
      <div class="w-full h-full bg-neutral-900/80 absolute flex  justify-center">
      <h1 class=" text-9xl uppercase font-Helv-Bold text-white  text-center ">{title}</h1>
      <p class=" w-1/2 font-Helv-Normal absolute text-xl top-1/2 text-neutral-300">{intro}</p>
      </div>
    </div>
  
  <div class="flex box">
    <!-- First Column - Heading -->
    <div class="w-2/6  top-0 h-screen flex  items-start panel " id="sticky">

      <h1 class="ml-5 text-6xl  font-primary font-extrabold  uppercase p-10  border-l-4 text-neutral-800 opacity-20 relative flex items-center bg-white" id={slug}>
        {title} 
        {/* <div class="w-5 h-5 bg-neutral-900 rounded-full    "></div> */}
        <div class="w-0 h-0  absolute -left-1
          border-t-[10px] border-t-transparent
          border-l-[20px] border-l-amber-300
          border-b-[10px] border-b-transparent">
        </div>
      </h1>
      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio id voluptates quam eligendi quasi reiciendis explicabo accusamus ratione alias cumque, modi expedita rerum exercitationem placeat ipsam deserunt neque aliquam repellendus?</p>

    </div>
    <div class="w-4/6 pl-8 font-secondary">
      
      <div class="space-y-8">
        <section class="p-10 pb-50 ">
         <div class="text-gray-600 text-lg ">
			      <Content/>
		    </div>
        </section>
      </div>
    </div>
  </div>
	))
 } 
</div>

<script>
import { gsap } from "gsap";
import ScrollTrigger from "gsap/ScrollTrigger";

gsap.registerPlugin(ScrollTrigger);

let boxes = gsap.utils.toArray(".box") as HTMLElement[];

boxes.forEach((box, i) => {
  const slug = box.querySelector('h1')?.id;
  if (slug) {
    const targetElement = document.querySelector(`#${slug}`);
    const heading = box.querySelector('h1');
    
    // Initial state
    gsap.set(heading, { opacity: 1 });
    
    // Scroll animation
    gsap.to(heading, {
      opacity: 0.2,
      scrollTrigger: {
        trigger: box,
        start: "top center",
        end: "bottom center",
        scrub: true,
        markers: true
      }
    });

    gsap.to(box, {
      duration: 1,
      scrollTrigger: {
        trigger: box,
        start: "100px center",
        end: "bottom center",
        pin: targetElement,
        markers: true
      }
    });
  }
});

let banners = gsap.utils.toArray(".banner");

banners.forEach((banner) => {
  let heading = banner.querySelector("h1");
  if (heading) {
    gsap.fromTo(
      heading,
      { opacity: 1,
        scale: .5,

       },
      {
        opacity: 0,
        scale: 2,
        scrollTrigger: {
          trigger: banner,
          start: "top center",
          end: "bottom center",
          scrub: true,
          pin: heading,
          // markers: true, // Uncomment for debugging
        },
      }
    );
  }
});
</script>
